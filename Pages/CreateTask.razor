@page "/task/create/{id:int}"
@using Shared
@inject HttpClient Http
@inject NavigationManager Navigation
<h3>Agregar Tarea</h3>
<EditForm Model="@_task" OnValidSubmit="Post">
    <div class="form-group">
        <label>Nombre: </label>
        <InputText @bind-Value="_task.Name" />
    </div>
    <div class="form-group">
        <label>Descripci√≥n: </label>
        <InputTextArea @bind-Value="_task.Description" />
    </div>
    <div class="form-group">
        <label>Imagen: </label>
        <InputText @bind-Value="_task.Image" />
    </div>
    <div class="form-group">
           <label>Estado: </label>
            <InputSelect @bind-Value="_task.StateId" >
                <option>Seleccione...</option>
                @if(_state != null)
                {
                    @foreach (var stte in _state)
                    {
                        <option value="@stte.StateId">@stte.Name</option>
                    }
                }
            </InputSelect>
    </div>
    <div class="form-group">
           <label>Categoria: </label>
            <InputSelect @bind-Value="_task.CategoryId" >
                <option>Seleccione...</option>

                @if(_category != null)
                {
                    @foreach (var cate in _category)
                    {
                        <option value="@cate.CategoryId">@cate.Name</option>
                    }
                }
            </InputSelect>
    </div>
    <div class="form-group">
            <label>Fecha Vencimiento: </label>
            <InputDate @bind-Value="_task.EndDate"/>

    </div>
    <div class="form-group">
        <input type="submit" class="btn btn-success" value="Agregar Tarea" />
    </div>
</EditForm>
@code {

    [Parameter]
    public int Id { get; set; }
    private Shared.Task _task = new();
    private List<Shared.State> _state;
    private List<Shared.Category> _category;
    protected override async System.Threading.Tasks.Task OnInitializedAsync()
    {
        _state = await Http.GetFromJsonAsync<List<Shared.State>>("/api/State");
        _category = await Http.GetFromJsonAsync<List<Shared.Category>>("/api/Category");
    }

    private async System.Threading.Tasks.Task Post()
    {
        if(_task.StateId ==0 || _task.CategoryId ==0)
            return;

        _task.ListId = Id;
        _task.DateRegistered = DateTime.Now;
        await Http.PostAsJsonAsync<Shared.Task>("/api/Task/", _task);
        Navigation.NavigateTo($"/task/{Id}");
    }
}